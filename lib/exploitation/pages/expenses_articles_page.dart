import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:flutter_svg/flutter_svg.dart';
import 'package:property_management/app/bloc/app_bloc.dart';
import 'package:property_management/characteristics/widgets/custom_tab_view.dart';
import 'package:property_management/exploitation/cubit/exploitation_cubit.dart';
import 'package:property_management/exploitation/pages/create_expenses_articles_page.dart';
import 'package:property_management/exploitation/pages/edit_expenses_articles_page.dart';
import 'package:property_management/objects/bloc/objects_bloc.dart';
import 'package:property_management/objects/pages/change_field_page.dart';
import 'package:property_management/app/theme/box_ui.dart';
import 'package:property_management/app/theme/colors.dart';
import 'package:property_management/app/theme/styles.dart';
import 'package:property_management/app/utils/utils.dart';
import 'package:property_management/app/widgets/box_icon.dart';

class ExpensesArticlesPage extends StatelessWidget {
  final String docId;
  ExpensesArticlesPage({Key? key, required this.docId}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: kBackgroundColor,
      appBar: AppBar(
        centerTitle: true,
        leading: null,
        automaticallyImplyLeading: false,
        title: Row(
          crossAxisAlignment: CrossAxisAlignment.center,
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            BoxIcon(
              iconPath: 'assets/icons/back.svg',
              iconColor: Colors.black,
              backgroundColor: Colors.white,
              onTap: () {
                Navigator.pop(context);
              },
            ),
            Spacer(),
            Text(
              'Эксплуатационные статьи',
              style: body,
            ),
            Spacer(),
            if (context.read<AppBloc>().state.user.isAdminOrManager())
              BoxIcon(
                iconPath: 'assets/icons/edit.svg',
                iconColor: Colors.black,
                backgroundColor: Colors.white,
                onTap: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => EditExpensesArticlesPage()),
                  );
                },
              ),
          ],
        ),
      ),
      body: BlocBuilder<ObjectsBloc, ObjectsState>(
        buildWhen: (previousState, state) {
          return previousState.places != state.places;
        },
        builder: (context, objectState) {
          return objectState.places[context.read<ExploitationCubit>().state.selectedPlaceId].expensesArticleItems == null
              ? context.read<AppBloc>().state.user.isAdminOrManager()
                ? GestureDetector(
                    onTap: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(builder: (context) => CreateExpensesArticlesPage(
                          docId: docId,
                        )),
                      );
                    },
                    child: Center(
                        child: Row(
                          crossAxisAlignment: CrossAxisAlignment.center,
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            SvgPicture.asset(
                              'assets/icons/plus.svg',
                              color: Color(0xff4B81EF),
                              height: 16,
                            ),
                            SizedBox(width: 10),
                            Text(
                              'Добавить эксплуатационные статьи',
                              textAlign: TextAlign.center,
                              style: title2.copyWith(
                                  color: Color(0xff4B81EF),
                                  fontSize: 14,
                                  fontWeight: FontWeight.w400
                              ),
                            ),
                          ],
                        ),
                      ),
                  )
                : CustomScrollView(
                    slivers: [
                      SliverFillRemaining(
                        hasScrollBody: false,
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.center,
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            SvgPicture.asset(
                              'assets/icons/home_white.svg',
                              color: Color(0xffE9ECEE),
                              height: 80,
                            ),
                            SizedBox(
                              height: 32,
                            ),
                            Text(
                              'Данные не заполнены, обратитесь к вашему менеджеру',
                              textAlign: TextAlign.center,
                              style: body.copyWith(
                                color: Color(0xffC7C9CC),
                              ),
                            ),
                          ],
                        ),
                      ),
                    ],
                  )
              : CustomTabView(
                  objectItems: objectState.places[context.read<ExploitationCubit>().state.selectedPlaceId].expensesArticleItems!,
                );
        }
      ),
    );
  }

}